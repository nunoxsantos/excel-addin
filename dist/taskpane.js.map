{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-bill-com-addin/./src/taskpane/taskpane.ts"],"sourcesContent":["/* src/taskpane/taskpane.ts */\n\n/* global console, document, Excel, Office, localStorage, fetch */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    init();\n  }\n});\n\n// Custom message display function for Office Add-ins\nfunction showMessage(message: string, type: \"success\" | \"error\" | \"info\" = \"info\") {\n  const messageDiv = document.getElementById(\"message\") as HTMLDivElement;\n  if (messageDiv) {\n    messageDiv.textContent = message;\n    messageDiv.className = `message message-${type}`;\n    messageDiv.style.display = \"block\";\n    \n    // Auto-hide after 5 seconds for success/info messages\n    if (type === \"success\" || type === \"info\") {\n      setTimeout(() => {\n        messageDiv.style.display = \"none\";\n      }, 5000);\n    }\n  }\n}\n\n// Data transformation layer\ninterface BillData {\n  id: string;\n  vendorName: string;\n  amount: number;\n  dueAmount: number;\n  dueDate: string;\n  invoiceNumber: string;\n  invoiceDate?: string;\n  // Add any other fields you want to track\n}\n\ninterface TransformationRule {\n  name: string;\n  condition: (bill: any) => boolean;\n  transform: (bill: any) => Partial<BillData>;\n}\n\n// Define your transformation rules here\nconst transformationRules: TransformationRule[] = [\n  {\n    name: \"Format Vendor Names\",\n    condition: (bill) => true, // Apply to all bills\n    transform: (bill) => ({\n      vendorName: bill.vendorName?.toUpperCase() || \"UNKNOWN VENDOR\"\n    })\n  },\n  {\n    name: \"Format Currency\",\n    condition: (bill) => true,\n    transform: (bill) => ({\n      amount: Math.round((bill.amount || 0) * 100) / 100, // Round to 2 decimal places\n      dueAmount: Math.round((bill.dueAmount || 0) * 100) / 100\n    })\n  },\n  {\n    name: \"Format Dates\",\n    condition: (bill) => bill.dueDate,\n    transform: (bill) => ({\n      dueDate: new Date(bill.dueDate).toLocaleDateString() // Convert to readable format\n    })\n  },\n  {\n    name: \"High Value Bills Alert\",\n    condition: (bill) => (bill.amount || 0) > 1000,\n    transform: (bill) => ({\n      vendorName: `🚨 ${bill.vendorName} (HIGH VALUE)`\n    })\n  },\n  {\n    name: \"Overdue Bills Alert\",\n    condition: (bill) => {\n      if (!bill.dueDate) return false;\n      const dueDate = new Date(bill.dueDate);\n      const today = new Date();\n      return dueDate < today;\n    },\n    transform: (bill) => ({\n      vendorName: `⚠️ ${bill.vendorName} (OVERDUE)`\n    })\n  }\n];\n\n// Apply transformation rules to a single bill\nfunction transformBill(originalBill: any): BillData {\n  let transformedBill: BillData = {\n    id: originalBill.id || \"\",\n    vendorName: originalBill.vendorName || \"\",\n    amount: originalBill.amount || 0,\n    dueAmount: originalBill.dueAmount || 0,\n    dueDate: originalBill.dueDate || \"\",\n    invoiceNumber: originalBill.invoice?.invoiceNumber || \"\",\n    invoiceDate: originalBill.invoice?.invoiceDate || \"\"\n  };\n\n  // Apply each transformation rule\n  transformationRules.forEach(rule => {\n    if (rule.condition(originalBill)) {\n      const changes = rule.transform(originalBill);\n      transformedBill = { ...transformedBill, ...changes };\n    }\n  });\n\n  return transformedBill;\n}\n\n// Apply transformation rules to all bills\nfunction transformBills(originalBills: any[]): BillData[] {\n  console.log(\"Applying transformation rules to bills...\");\n  return originalBills.map(transformBill);\n}\n\nfunction init() {\n  const callButton = document.getElementById(\"callApi\") as HTMLButtonElement;\n  const sessionIdInput = document.getElementById(\"sessionId\") as HTMLInputElement;\n  const devKeyInput = document.getElementById(\"devKey\") as HTMLInputElement;\n  \n  const maxValue = 20;\n  const maxPages = 10; // Safety limit to prevent infinite loops\n\n  callButton.onclick = async () => {\n    // Validate inputs\n    const sessionId = sessionIdInput.value.trim();\n    const devKey = devKeyInput.value.trim();\n    \n    if (!sessionId || !devKey) {\n      showMessage(\"Please enter both Session ID and Developer Key.\", \"error\");\n      return;\n    }\n\n    const headers = {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"sessionId\": sessionId,\n      \"devKey\": devKey\n    };\n\n    try {\n      let billsUrl = \"https://gateway.stage.bill.com/connect/v3/bills\";\n      let allBills: any[] = [];\n      let pageCount = 0;\n\n      // First API call\n      console.log(\"Fetching bills from Bill.com API...\");\n      let response = await fetch(billsUrl, {\n        method: 'GET',\n        headers: headers\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      let result = await response.json();\n      console.log(\"Initial API response:\", result);\n\n      if (result.results && result.results.length > 0) {\n        console.log(`Results found: ${result.results.length}`);\n        allBills.push(...result.results);\n\n        let nextPage = result.nextPage;\n        pageCount = 1;\n\n        // Pagination loop with safety checks\n        while (nextPage && pageCount < maxPages) {\n          const nextBillsUrl = `https://gateway.stage.bill.com/connect/v3/bills?max=${maxValue}&page=${nextPage}`;\n          console.log(`Fetching page ${pageCount + 1}...`);\n          \n          const nextResponse = await fetch(nextBillsUrl, {\n            method: 'GET',\n            headers: headers\n          });\n\n          if (!nextResponse.ok) {\n            throw new Error(`HTTP error! status: ${nextResponse.status}`);\n          }\n\n          const nextResult = await nextResponse.json();\n          console.log(`Page ${pageCount + 1} response:`, nextResult);\n\n          if (nextResult.results) {\n            allBills.push(...nextResult.results);\n          }\n\n          nextPage = nextResult.nextPage || null;\n          pageCount++;\n        }\n\n        if (pageCount >= maxPages) {\n          console.warn(`Reached maximum page limit (${maxPages}). Stopping pagination.`);\n        }\n      } else {\n        console.log(\"No results found in the initial API request.\");\n      }\n\n      // Output results to Excel\n      if (allBills.length > 0) {\n        console.log(`Total bills fetched: ${allBills.length}`);\n        \n        // Apply transformation rules\n        const transformedBills = transformBills(allBills);\n        console.log(\"Transformation complete. Sample transformed bill:\", transformedBills[0]);\n        \n        await Excel.run(async (context) => {\n          const sheet = context.workbook.worksheets.getActiveWorksheet();\n          \n          // Write headers\n          sheet.getRange(\"A1:F1\").values = [[\"Bill ID\", \"Vendor Name\", \"Amount\", \"Due Amount\", \"Due Date\", \"Invoice Number\"]];\n          \n          // Write transformed data (limit to first 100 rows for performance)\n          const displayBills = transformedBills.slice(0, 100);\n          const excelData = displayBills.map(bill => [\n            bill.id,\n            bill.vendorName,\n            bill.amount,\n            bill.dueAmount,\n            bill.dueDate,\n            bill.invoiceNumber\n          ]);\n          \n          if (excelData.length > 0) {\n            sheet.getRange(`A2:F${excelData.length + 1}`).values = excelData;\n          }\n          \n          await context.sync();\n        });\n        \n        showMessage(`Successfully fetched ${allBills.length} bills, applied transformations, and wrote to Excel!`, \"success\");\n      } else {\n        showMessage(\"No bills found.\", \"info\");\n      }\n\n    } catch (err) {\n      console.error(\"API call failed\", err);\n      showMessage(`API call failed: ${err instanceof Error ? err.message : 'Unknown error'}`, \"error\");\n    }\n  };\n}\n"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","toString","slice","constructor","name","test","_unsupportedIterableToArray","_nonIterableSpread","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","showMessage","message","type","undefined","messageDiv","document","getElementById","textContent","className","concat","style","display","setTimeout","Office","onReady","info","callButton","sessionIdInput","devKeyInput","host","HostType","Excel","onclick","_callee2","sessionId","devKey","headers","allBills","pageCount","response","result","nextPage","nextBillsUrl","nextResponse","nextResult","transformedBills","_t","_context2","trim","console","log","fetch","method","ok","Error","status","json","results","warn","transformBills","run","_ref2","_callee","context","sheet","displayBills","excelData","_context","workbook","worksheets","getActiveWorksheet","getRange","values","map","bill","id","vendorName","amount","dueAmount","dueDate","invoiceNumber","sync","_x","error","transformationRules","condition","transform","_bill$vendorName","toUpperCase","Math","round","Date","toLocaleDateString","transformBill","originalBill","_originalBill$invoice","_originalBill$invoice2","transformedBill","invoice","invoiceDate","rule","changes","originalBills"],"sourceRoot":""}